public class MainActivity extends AppCompatActivity {
    private RecyclerView recyclerView;
    private TodoAdapter todoAdapter;
    private List<TodoItem> todoList;
    private TodoDatabase todoDatabase;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        recyclerView = findViewById(R.id.recyclerView);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        todoList = new ArrayList<>();
        todoAdapter = new TodoAdapter(todoList);

        recyclerView.setAdapter(todoAdapter);

        todoDatabase = Room.databaseBuilder(getApplicationContext(),
                TodoDatabase.class, "todo-db").build();

        loadTodoItems();
    }

    private void loadTodoItems() {
        todoDatabase.todoDao().getAllTodoItems()
                .observe(this, new Observer<List<TodoItem>>() {
                    @Override
                    public void onChanged(List<TodoItem> items) {
                        todoList.clear();
                        todoList.addAll(items);
                        todoAdapter.notifyDataSetChanged();
                    }
                });
    }

    public void addTodoItem(View view) {
        // Implement logic to add a new todo item to the database
        // and update RecyclerView
    }

    public void deleteTodoItem(int position) {
        // Implement logic to delete a todo item from the database
        // and update RecyclerView
    }
}
@Entity(tableName = "todos")
public class TodoItem {
    @PrimaryKey(autoGenerate = true)
    public int id;

    public String task;

    public TodoItem(String task) {
        this.task = task;
    }
}@Dao
public interface TodoDao {
    @Query("SELECT * FROM todos")
    LiveData<List<TodoItem>> getAllTodoItems();

    @Insert
    void insertTodoItem(TodoItem item);

    @Delete
    void deleteTodoItem(TodoItem item);
}
